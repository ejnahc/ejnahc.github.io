<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog.chan.je</title>
    <description>Here is personal blog by Chanje Park, aka ejnahc, founder of EJN.
</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 18 Dec 2016 01:18:19 +0900</pubDate>
    <lastBuildDate>Sun, 18 Dec 2016 01:18:19 +0900</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Jekyll with Github Pages</title>
        <description>&lt;p&gt;일단 블로그 첫 글은 이 블로그를 돌리는 Jekyll을 어떻게 Github Pages를 이용하여 설치했는지에 대해 적어보고자 한다. 써보게 된 동기는… 요즘 이걸 많이 쓴다고 하길래 나도 따라 써 봄.&lt;/p&gt;

&lt;p&gt;Github Pages에서는 기본적으로 Jekyll을 설치하여 호스팅이 가능하지만 Paginate 등의 Plugin은 설치가 불가능하다. github-pages 라는 gem이 있지만 여기에서도 Paginate 플러그인은 설치되어 있지 않다. 따라서 &lt;strong&gt;local에서 직접 사이트를 build 한 다음, _site 폴더를 github page에 호스팅 하는 방법을 사용해야 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;사용중인 Ruby 버전은 2.3.3p222, Jekyll 버전은 3.3.1 이다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gem install jekyll bundler
jekyll new ejnahc.github.io
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ejnahc.github.io
bundle
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve --watch --host&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.0.0.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이후 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://SITE:4000/&lt;/code&gt; 으로 접속하여 정상적으로 나오는지 확인한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; 에서 필요한 설정을 바꿀 수 있다.&lt;/p&gt;

&lt;p&gt;이후 &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll build&lt;/code&gt;로 직접 build하거나, 또는 serve 켜놓고 파일을 바꾸게 되면 자동으로 build 해준다.&lt;/p&gt;

&lt;h2 id=&quot;스킨-씌우기&quot;&gt;스킨 씌우기&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org&quot;&gt;Jekyll Themes&lt;/a&gt;에 다양한 테마들이 있다. 마음에 드는 것을 고르면 된다. &lt;a href=&quot;http://jekyllthemes.org/themes/zetsu/&quot;&gt;Zetsu&lt;/a&gt;를 사용한다. &lt;a href=&quot;https://github.com/nandomoreirame/zetsu/archive/master.zip&quot;&gt;다운로드 링크&lt;/a&gt;를 눌러 다운받아서 루트에 덮어 씌운다.&lt;/p&gt;

&lt;p&gt;스킨마다 다르기 때문에 확실히 어떻게 해야 한다고 적을 수는 없지만 기존 파일들과 비교하여 눈치껏 잘 알아서 수정하면 된다. 그러기 귀찮으면 그냥 폴더 싹 날려버리고 스킨 폴더로 시작하는 것도 방법이다.&lt;/p&gt;

&lt;p&gt;위 스킨의 경우 새로운 gem을 설치해야 하는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;에 아래 두 줄을 추가한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rake&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sass&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이후 &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; 로 추가된 gem을 설치한다.&lt;/p&gt;

&lt;h2 id=&quot;글-쓰기&quot;&gt;글 쓰기&lt;/h2&gt;
&lt;p&gt;글 쓰는 것은 _posts 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;시간-제목.md&lt;/code&gt; 로 작성하면 된다. 이미 샘플 문서 파일이 있을건데 파일 이름을 따라 지어주면 된다. 파일 이름은 중요하니 잘 따라 짓는게 좋다.&lt;/p&gt;

&lt;p&gt;글의 첫 부분에 아래와 같은 부분이 있는데 이걸 Front Matter이라 부른다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;---
layout: post
title:  &quot;Jekyll with Github Pages&quot;
date:   2016-12-17 22:43:03 +0900
categories: programming jekyll
comments: true
---&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여러 항목들에 대한 설명을 &lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;여기&lt;/a&gt;에서 볼 수 있다. &lt;code class=&quot;highlighter-rouge&quot;&gt;published&lt;/code&gt; 라는 것도 있는데 false로 두면 표시되지 않게 하는 파라미터다.&lt;/p&gt;

&lt;p&gt;글 양식은 Markdown을 사용한다. 기본적인 사용 방법은 &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown Cheatsheet&lt;/a&gt;에서 확인한다.&lt;/p&gt;

&lt;h2 id=&quot;jekyll-paginate-플러그인-설치&quot;&gt;jekyll-paginate 플러그인 설치&lt;/h2&gt;
&lt;p&gt;Gemfile 파일에서 아래에 다음과 같이 삽입&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# If you have any plugins, put them here!&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:jekyll_plugins&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-feed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~&amp;gt; 0.6&quot;&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-paginate&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 새로 추가한다.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; 로 설치한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; 을 열어 아래 두 줄을 추가한다..&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;paginate: 10
gems:
  - jekyll-paginate&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;내가 위에서 쓰는 스킨에는 이미 paginate snippet이 있어 작업할 필요가 없지만 필요한 경우 pagination 부분을 스킨에 추가해야 한다. 예제 Snippet을 &lt;a href=&quot;https://jekyllrb.com/docs/pagination/&quot;&gt;여기&lt;/a&gt;에서 확인할 수 있다. 어떻게 적용하는지 모르겠으면 내가 적용한 스킨을 받아서 확인해 보면 된다.&lt;/p&gt;

&lt;p&gt;내 스킨은 오래되어서 경로가 잘못되어 있는데 이전, 다음 링크를 아래와 같이 변경한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;newer-posts&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;laquo;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;older-posts&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;raquo;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;disqus-댓글-달기&quot;&gt;Disqus 댓글 달기&lt;/h2&gt;
&lt;p&gt;스킨에 따라 다르지만 위의 스킨같은 경우에는 각 문서의 Front Matter에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;comments&lt;/code&gt; 변수를 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;로 설정해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://disqus.com&quot;&gt;Disqus&lt;/a&gt;에서 설치 페이지를 들어가서 댓글 위젯을 추가한 다음, &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/comments.html&lt;/code&gt; 에 있는 Disqus 소스를 아래와 같이 수정한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{{ page.id | prepend: site.url }}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;identifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{{page.id}}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'script'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'//blog-chan-je.disqus.com/embed.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'data-timestamp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);})();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://disqus.com/?ref_noscript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;주소가 같으면 같은 댓글 주소가 보여지게 되는 경우가 있으니 스킨에 추가한 다음 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.page.url&lt;/code&gt; 과 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.page.identifier&lt;/code&gt; 가 제대로 설정되어 있는지를 확인한다.&lt;/p&gt;

&lt;h2 id=&quot;github-page에-올리기&quot;&gt;Github Page에 올리기&lt;/h2&gt;
&lt;p&gt;이정도면 Jekyll 설정은 다 된거 같다. Github Page에 올리는데 아까 말한것과 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; 폴더를 &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; 브랜치로 설정하여 접속 시 보이게 하고 나머지 폴더들은 글 내용의 변동 사항 등을 저장해 두기 위해 역시나 repo에 올려둘려고 한다. 먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; 폴더부터 master 브랜치로 올린다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_site
git init
git add --all
git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;first commit&quot;&lt;/span&gt;
git remote add origin git@github.com:ejnahc/ejnahc.github.io.git
git push -u origin master&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;그 상위 폴더 또한 올리되, dev 브랜치를 만들어 올리기로 한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../
git init
git add --all
git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;first commit&quot;&lt;/span&gt;
git remote add origin git@github.com:ejnahc/ejnahc.github.io.git
git checkout -b dev
git branch -d master
git checkout dev
git push -u origin dev&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;둘 다 정상적으로 업로드 되었고 페이지가 제대로 나오는지 확인한다. 이제는 문서를 편집하거나 레이아웃을 수정하고 나서 둘 다 push 해서 올려주면 된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;Commit message: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;commit_msg

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/ejnahc.github.io &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add --all &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$commit_msg&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_site &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add --all &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$commit_msg&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;따로 bash script으로 만들어 돌려도 되고 편하게 하면 될 것 같다.&lt;/p&gt;

&lt;h2 id=&quot;custom-domain-적용하기&quot;&gt;custom domain 적용하기&lt;/h2&gt;
&lt;p&gt;가지고 있는 도메인을 블로그 주소로 쓸 수도 있는데 CNAME 레코드를 바꾸면 된다. &lt;a href=&quot;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&quot;&gt;Github Help&lt;/a&gt;에서 확인하면 된다. CNAME 설정을 하면 github repo에서 CNAME 파일을 자동 생성하기에 한번 &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;로 끌어와야 한다.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Dec 2016 22:43:03 +0900</pubDate>
        <link>/programming/jekyll/2016/12/17/jekyll-with-github-pages.html</link>
        <guid isPermaLink="true">/programming/jekyll/2016/12/17/jekyll-with-github-pages.html</guid>
        
        
        <category>programming</category>
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
